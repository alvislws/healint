{"version":3,"sources":["components/login/inputFields.tsx","staticData/userLogin.ts","components/login/form.tsx","components/navBar/navigationBar.tsx","staticData/dummyExpenses.ts","components/chart/chart.tsx","components/dashboard/form.tsx","components/table/table.tsx","components/dashboard/dashboard.tsx","App.tsx","index.js"],"names":["InputField","handleInputChange","Form","Group","controlId","style","margin","Label","InputGroup","hasValidation","Control","name","type","placeholder","required","onChange","Text","className","Feedback","user","LoginForm","userCredentials","setLoginStatus","useState","validated","setValidated","history","useHistory","display","justifyContent","alignItems","Card","border","width","Body","padding","Title","as","noValidate","onSubmit","e","form","currentTarget","validateLoginCredential","username","password","checkValidity","preventDefault","stopPropagation","push","alert","Button","variant","NavigationBar","loginStatus","Navbar","fixed","bg","Container","Brand","href","color","Toggle","Collapse","Nav","Link","disabled","dummyExpensesData","itemAmount","expenseDate","isDeleted","category","note","id","Chart","expensePayload","dateLabel","sortedPayload","sort","a","b","aa","split","join","bb","map","value","listOfTransaction","Object","values","reduce","r","o","data","labels","Set","datasets","label","fill","backgroundColor","borderColor","DashboardForm","handleSubmit","title","balance","rowData","textAlign","defaultValue","min","step","Table","setExpensePayload","showEdit","setShowEdit","setRowData","columns","selector","sortable","allowOverflow","cell","row","size","onClick","updatedPayload","filter","transaction","handleDelete","button","shouldShowEditForm","Modal","show","onHide","Header","closeButton","borderBottom","updatedTransaction","Number","amount","notes","date","defaultSortField","pagination","responsive","paginationPerPage","paginationRowsPerPageOptions","Dashboard","setShow","totalOutflow","previousValue","currentValue","useEffect","flexFlow","ListGroup","Item","updatedListOfTransaction","length","toString","App","setUserCredentials","exact","path","target","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1db99f51.chunk.js","sourcesContent":["import Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/esm/InputGroup\";\r\n\r\ninterface InputFieldProps {\r\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction InputField({ handleInputChange }: InputFieldProps): JSX.Element {\r\n  return (\r\n    <>\r\n      <Form.Group\r\n        controlId=\"validationCustomUsername\"\r\n        style={{ margin: \"1rem 0\" }}\r\n      >\r\n        <Form.Label>Username</Form.Label>\r\n        <InputGroup hasValidation>\r\n          <Form.Control\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            required\r\n            onChange={handleInputChange}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            As this is a prototype; please use \"test1\" as the username\r\n          </Form.Text>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a username.\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n      <Form.Group controlId=\"validationCustomPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <InputGroup hasValidation>\r\n          <Form.Control\r\n            name=\"password\"\r\n            type=\"password\"\r\n            aria-describedby=\"inputGroupPrepend\"\r\n            required\r\n            onChange={handleInputChange}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            As this is a prototype; please use \"testing123\" as the password\r\n          </Form.Text>\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please enter a password.\r\n          </Form.Control.Feedback>\r\n        </InputGroup>\r\n      </Form.Group>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","export const user: {username: string, password: string} = {\r\n    username: 'test1',\r\n    password: 'testing123'\r\n}","import Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/esm/Card\";\r\nimport InputField from \"./inputFields\";\r\nimport { user } from \"../../staticData/userLogin\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { UserCredential } from \"../../App\";\r\nimport { useState } from \"react\";\r\n\r\nfunction LoginForm({\r\n  handleInputChange,\r\n  userCredentials,\r\n  setLoginStatus,\r\n}: LoginFormProps): JSX.Element {\r\n  const [validated, setValidated] = useState<boolean>(false);\r\n\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    const form = e.currentTarget;\r\n    const validateLoginCredential =\r\n      userCredentials.username === user.username &&\r\n      userCredentials.password === user.password;\r\n    if (!form.checkValidity()) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    if (validateLoginCredential) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setLoginStatus(true);\r\n      history.push(\"/home\");\r\n    }\r\n    if (!validateLoginCredential) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      alert(\"Please use the credentials stated below the input field\");\r\n    }\r\n    setValidated(true);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <Card border=\"dark\" style={{ width: \"30rem\" }}>\r\n        <Card.Body style={{ padding: \"4rem\" }}>\r\n          <Card.Title as=\"h2\">Login</Card.Title>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <InputField handleInputChange={handleInputChange} />\r\n            <Button variant=\"dark\" type=\"submit\" style={{ margin: \"1rem 0\" }}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface LoginFormProps {\r\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  userCredentials: UserCredential;\r\n  setLoginStatus: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport default LoginForm;\r\n","import Container from \"react-bootstrap/Container\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\ninterface NavigationBarProps {\r\n  name?: string;\r\n  loginStatus?: boolean;\r\n}\r\n\r\nfunction NavigationBar({ name, loginStatus }: NavigationBarProps): JSX.Element {\r\n  return (\r\n    <Navbar fixed=\"top\" bg=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#home\" style={{ color: \"white\" }}>\r\n          Expense Tracker\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          {loginStatus && (\r\n            <>\r\n              <Nav.Link style={{ color: \"white\" }} disabled>\r\n                Signed in as: {name}\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/\" style={{ color: \"white\" }}>\r\n                Sign out\r\n              </Nav.Link>\r\n            </>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import { DummyExpenseInterface } from \"../types.ts/apiTypes\";\r\n\r\nexport const dummyExpensesData: DummyExpenseInterface = {\r\n    userName: 'alvis',\r\n    name: 'alvis',\r\n    balance: 100000,\r\n    categories: [\r\n        {\r\n            itemAmount: 800,\r\n            expenseDate: \"2021-05-17\",\r\n            isDeleted: false,\r\n            category: \"Education\",\r\n            note: 'final year tuition',\r\n            id: \"1\"\r\n          },\r\n          {\r\n            itemAmount: 3000,\r\n            expenseDate: \"2021-04-01\",\r\n            isDeleted: false,\r\n            category: \"Bills\",\r\n            note: '',\r\n            id: \"2\"\r\n          },\r\n          {\r\n            itemAmount: 800,\r\n            expenseDate: \"2021-03-02\",\r\n            isDeleted: false,\r\n            category: \"Education\",\r\n            note: '',\r\n            id: \"3\"\r\n          },\r\n          {\r\n            itemAmount: 4000,\r\n            expenseDate: \"2021-04-01\",\r\n            isDeleted: false,\r\n            category: \"Food and Beverage\",\r\n            note: '',\r\n            id: \"4\"\r\n          },\r\n          {\r\n            itemAmount: 450,\r\n            expenseDate: \"2021-10-22\",\r\n            isDeleted: false,\r\n            category: \"Food and Beverage\",\r\n            note: '',\r\n            id: \"5\"\r\n          }\r\n    ]\r\n}\r\n\r\n\r\n","import { Card } from \"react-bootstrap\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Categories } from \"../../types.ts/apiTypes\";\r\n\r\nfunction Chart({ expensePayload }: ChartProps): JSX.Element {\r\n  const dateLabel = [];\r\n\r\n  const sortedPayload = expensePayload.sort((a, b) => {\r\n    var aa = a.expenseDate.split(\"-\").join(),\r\n      bb = b.expenseDate.split(\"-\").join();\r\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\r\n  });\r\n\r\n  sortedPayload.map((value) => dateLabel.push(value.expenseDate));\r\n\r\n  const listOfTransaction = [];\r\n  const res: Array<{ expenseDate: string; itemAmount: number }> = Object.values(\r\n    sortedPayload.reduce((r, o) => {\r\n      r[o.expenseDate] = r[o.expenseDate] || {\r\n        expenseDate: o.expenseDate,\r\n        itemAmount: 0,\r\n      };\r\n      r[o.expenseDate].itemAmount += +o.itemAmount;\r\n      return r;\r\n    }, {})\r\n  );\r\n\r\n  res.map((value) => listOfTransaction.push(value.itemAmount));\r\n  const data = {\r\n    labels: [...new Set(dateLabel)],\r\n    datasets: [\r\n      {\r\n        label: \"Expenses over time\",\r\n        data: listOfTransaction,\r\n        fill: true,\r\n        backgroundColor: \"rgba(75,192,192,0.2)\",\r\n        borderColor: \"rgba(75,192,192,1)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: \"50rem\", padding: \"2rem\" }}>\r\n      <Line data={data} />\r\n    </Card>\r\n  );\r\n}\r\n\r\ninterface ChartProps {\r\n  expensePayload: Array<Categories>;\r\n}\r\n\r\nexport default Chart;\r\n","import { Card } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Categories } from \"../../types.ts/apiTypes\";\r\n\r\nfunction DashboardForm({\r\n  handleSubmit,\r\n  balance,\r\n  title,\r\n  rowData,\r\n}: DashboardFormProps): JSX.Element {\r\n  return (\r\n    <Form style={{ padding: \"1rem\" }} onSubmit={handleSubmit}>\r\n      <Card.Title as=\"h5\" style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n        {title}\r\n      </Card.Title>\r\n      <Form.Group controlId=\"formGridState\" className=\"mb-3\">\r\n        <Form.Label>Category</Form.Label>\r\n        <Form.Control\r\n          name=\"category\"\r\n          as=\"select\"\r\n          defaultValue={rowData && rowData.category}\r\n        >\r\n          <option value=\"Bills\">Bills</option>\r\n          <option value=\"Education\">Education</option>\r\n          <option value=\"Food and Beverage\">Food and Beverage</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"amount\">\r\n        <Form.Label>Amount</Form.Label>\r\n        <Form.Control\r\n          defaultValue={rowData && rowData.itemAmount}\r\n          name=\"amount\"\r\n          type=\"number\"\r\n          min=\"0.00\"\r\n          step=\"0.01\"\r\n          required\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"note\">\r\n        <Form.Label>Note</Form.Label>\r\n        <Form.Control\r\n          name=\"notes\"\r\n          type=\"text\"\r\n          defaultValue={rowData && rowData.note}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"note\">\r\n        <Form.Label>Date of transaction</Form.Label>\r\n        <Form.Control\r\n          type=\"date\"\r\n          name=\"date\"\r\n          required\r\n          defaultValue={rowData && rowData.expenseDate}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"success\" type=\"submit\">\r\n        Save\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\ninterface DashboardFormProps {\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  balance: number;\r\n  title: string;\r\n  rowData?: Categories;\r\n}\r\n\r\nexport default DashboardForm;\r\n","import { useState } from \"react\";\r\nimport { Button, Card, Modal } from \"react-bootstrap\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport { Categories } from \"../../types.ts/apiTypes\";\r\nimport DashboardForm from \"../dashboard/form\";\r\n\r\nfunction Table({\r\n  expensePayload,\r\n  setExpensePayload,\r\n  balance,\r\n}: TableProps): JSX.Element {\r\n  const [showEdit, setShowEdit] = useState<boolean>(false);\r\n  const [rowData, setRowData] = useState<Categories>();\r\n\r\n  const handleDelete = (id: string): void => {\r\n    const updatedPayload = expensePayload.filter(\r\n      (transaction) => transaction.id !== id\r\n    );\r\n    setExpensePayload(updatedPayload);\r\n  };\r\n\r\n  const shouldShowEditForm = (rowData: Categories): void => {\r\n    setRowData(rowData);\r\n    setShowEdit(!showEdit);\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n\r\n    const updatedTransaction: Categories = {\r\n      itemAmount: Number(form.amount.value),\r\n      category: form.category.value,\r\n      note: form.notes.value,\r\n      expenseDate: form.date.value,\r\n      isDeleted: false,\r\n      id: rowData.id,\r\n    };\r\n    const updatedPayload = expensePayload.map((value) =>\r\n      value.id === rowData.id ? updatedTransaction : value\r\n    );\r\n    setExpensePayload(updatedPayload);\r\n    setShowEdit(false);\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleClose = () => setShowEdit(false);\r\n\r\n  const columns = [\r\n    {\r\n      name: \"Category\",\r\n      selector: \"category\",\r\n      sortable: false,\r\n    },\r\n    {\r\n      name: \"Amount\",\r\n      selector: \"itemAmount\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Date of Transaction\",\r\n      selector: \"expenseDate\",\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Note\",\r\n      selector: \"note\",\r\n      sortable: false,\r\n      allowOverflow: true,\r\n    },\r\n    {\r\n      name: \"Delete\",\r\n      selector: \"id\",\r\n      cell: (row) => (\r\n        <Button variant=\"danger\" size=\"sm\" onClick={() => handleDelete(row.id)}>\r\n          Delete\r\n        </Button>\r\n      ),\r\n      button: true,\r\n    },\r\n    {\r\n      name: \"Edit\",\r\n      cell: (row) => (\r\n        <Button\r\n          variant=\"warning\"\r\n          size=\"sm\"\r\n          onClick={() => shouldShowEditForm(row)}\r\n        >\r\n          Edit\r\n        </Button>\r\n      ),\r\n      button: true,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n      <Card>\r\n        <Modal show={showEdit} onHide={handleClose}>\r\n          <Modal.Header closeButton style={{ borderBottom: \"none\" }} />\r\n          <Modal.Body>\r\n            <DashboardForm\r\n              handleSubmit={handleSubmit}\r\n              balance={balance}\r\n              title=\"Edit a Transaction\"\r\n              rowData={rowData}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Card.Title as=\"h5\" style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n          List of Expenses\r\n        </Card.Title>\r\n        <DataTable\r\n          columns={columns}\r\n          data={expensePayload}\r\n          defaultSortField=\"expenseDate\"\r\n          pagination\r\n          responsive\r\n          paginationPerPage={5}\r\n          paginationRowsPerPageOptions={[5, 15, 25, 50]}\r\n          style={{ width: \"50rem\" }}\r\n        />\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface TableProps {\r\n  expensePayload: Array<Categories>;\r\n  setExpensePayload: React.Dispatch<React.SetStateAction<Categories[]>>;\r\n  balance: number;\r\n}\r\n\r\nexport default Table;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button, Card, ListGroup, Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { dummyExpensesData } from \"../../staticData/dummyExpenses\";\r\nimport { Categories } from \"../../types.ts/apiTypes\";\r\nimport Chart from \"../chart/chart\";\r\nimport Table from \"../table/table\";\r\nimport DashboardForm from \"./form\";\r\n\r\nfunction Dashboard({ loginStatus }: HomeProps): JSX.Element {\r\n  const [expensePayload, setExpensePayload] = useState<Array<Categories>>([]);\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  let history = useHistory();\r\n\r\n  const totalOutflow = expensePayload.reduce((previousValue, currentValue) => {\r\n    return previousValue + currentValue.itemAmount;\r\n  }, 0);\r\n\r\n  const balance = dummyExpensesData.balance - totalOutflow;\r\n\r\n  useEffect(() => {\r\n    setExpensePayload(dummyExpensesData.categories);\r\n    !loginStatus && history.push(\"/\");\r\n  }, [history, loginStatus]);\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    const form = e.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    const updatedListOfTransaction = expensePayload && [\r\n      ...expensePayload,\r\n      {\r\n        itemAmount: Number(form.amount.value),\r\n        category: form.category.value,\r\n        note: form.notes.value,\r\n        expenseDate: form.date.value,\r\n        isDeleted: false,\r\n        id: (Number(expensePayload.length) + 1).toString(),\r\n      },\r\n    ];\r\n    setExpensePayload(updatedListOfTransaction);\r\n    setShow(false);\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexFlow: \"column\",\r\n        margin: \"1rem\",\r\n      }}\r\n    >\r\n      <Card style={{ width: \"50rem\" }}>\r\n        <Card.Title as=\"h5\" style={{ textAlign: \"center\", padding: \"1rem\" }}>\r\n          Overview\r\n        </Card.Title>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item\r\n            as=\"h6\"\r\n            style={{\r\n              color: \"green\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            Inflow:\r\n            <span>+${dummyExpensesData.balance}</span>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item\r\n            as=\"h6\"\r\n            style={{\r\n              color: \"red\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            Outflow: <span></span>-${totalOutflow}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item\r\n            as=\"h6\"\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n            }}\r\n          >\r\n            Balance:{\" \"}\r\n            <span style={{ color: balance < 0 && \"red\" }}>${balance}</span>\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n        <Button variant=\"success\" onClick={handleShow}>\r\n          Add a transaction\r\n        </Button>\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton style={{ borderBottom: \"none\" }} />\r\n          <Modal.Body>\r\n            <DashboardForm\r\n              handleSubmit={handleSubmit}\r\n              balance={balance}\r\n              title=\"Add Expenses\"\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Card>\r\n      <Table\r\n        expensePayload={expensePayload}\r\n        setExpensePayload={setExpensePayload}\r\n        balance={balance}\r\n      />\r\n      <Chart expensePayload={expensePayload} />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HomeProps {\r\n  loginStatus: boolean;\r\n}\r\n\r\nexport default Dashboard;\r\n","import { useState } from \"react\";\nimport \"./App.css\";\nimport LoginForm from \"./components/login/form\";\nimport NavigationBar from \"./components/navBar/navigationBar\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard/dashboard\";\n\nfunction App(): JSX.Element {\n  const [userCredentials, setUserCredentials] = useState<UserCredential>({});\n  const [loginStatus, setLoginStatus] = useState<boolean>(false);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { name, value } = e.target;\n    setUserCredentials({ ...userCredentials, [name]: value });\n    return;\n  };\n\n  return (\n    <>\n      <NavigationBar\n        name={userCredentials.username}\n        loginStatus={loginStatus}\n      />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <LoginForm\n              userCredentials={userCredentials}\n              setLoginStatus={setLoginStatus}\n              handleInputChange={handleInputChange}\n            />\n          </Route>\n          <Route path=\"/home\">\n            <Dashboard loginStatus={loginStatus} />\n          </Route>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport interface UserCredential {\n  [key: string]: string;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}